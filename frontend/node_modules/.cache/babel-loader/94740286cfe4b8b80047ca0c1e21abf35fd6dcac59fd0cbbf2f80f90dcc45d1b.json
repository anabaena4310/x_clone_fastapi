{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SNSApp=()=>{// State variables for user registration, login, post creation, and timeline display\nconst[username,setUsername]=useState('');const[password,setPassword]=useState('');const[title,setTitle]=useState('');const[content,setContent]=useState('');const[posts,setPosts]=useState([]);const[error,setError]=useState('');const[token,setToken]=useState(null);const[isRegistered,setIsRegistered]=useState(false);// ユーザー登録済みかどうかの状態\n// ユーザー登録成功時に呼び出す関数\nconst handleRegisterSuccess=()=>{setIsRegistered(true);// 登録が成功したら、isRegisteredをtrueに設定\n};// Handle user registration\nconst handleRegister=async e=>{e.preventDefault();try{const response=await axios.post('http://localhost:8000/register/',{username:username,// usernameを明示的に指定\npassword:password// passwordを明示的に指定\n});console.log('Registration successful:',response.data);setError('');handleRegisterSuccess();// 登録成功時の処理を呼び出す\n}catch(err){console.error('Error during registration:',err);setError('Registration failed. Please try again.');}};// Handle user login\nconst handleLogin=async e=>{e.preventDefault();try{const response=await axios.post('http://localhost:8000/login',{username,password});const{token}=response.data;localStorage.setItem('token',token);// Save token in localStorage\nsetToken(token);setError('');console.log('Login successful:',response.data);}catch(err){console.error('Error during login:',err);setError('Login failed. Please check your credentials.');}};// Handle post creation\nconst handleCreatePost=async e=>{e.preventDefault();if(!token){setError('You must be logged in to create a post.');return;}try{const response=await axios.post('http://localhost:8000/posts',{title,content},{headers:{Authorization:`Bearer ${token}`}});console.log('Post created successfully:',response.data);setError('');fetchPosts();// Refresh the timeline after creating a post\n}catch(err){console.error('Error creating post:',err);setError('Failed to create post. Please try again.');}};// Fetch posts for the timeline\nconst fetchPosts=async()=>{try{const response=await axios.get('http://localhost:8000/posts');setPosts(response.data);setError('');}catch(err){console.error('Error fetching posts:',err);setError('Failed to load posts.');}};useEffect(()=>{fetchPosts();// Load posts when the component is mounted\n},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Social Media App\"}),!token&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign Up\"})]})]}),!token&&isRegistered&&/*#__PURE__*/// ユーザーがログインしておらず、登録済みの場合のみ表示\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]}),token&&isRegistered&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create Post\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreatePost,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Content:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:content,onChange:e=>setContent(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Post\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Timeline\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"ul\",{children:posts.map(post=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:post.title}),/*#__PURE__*/_jsx(\"p\",{children:post.content}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Posted by: \",post.author.username]})]},post.id))})]})]});};export default SNSApp;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","SNSApp","username","setUsername","password","setPassword","title","setTitle","content","setContent","posts","setPosts","error","setError","token","setToken","isRegistered","setIsRegistered","handleRegisterSuccess","handleRegister","e","preventDefault","response","post","console","log","data","err","handleLogin","localStorage","setItem","handleCreatePost","headers","Authorization","fetchPosts","get","children","onSubmit","type","value","onChange","target","required","map","author","id"],"sources":["C:/Users/bioma/python/xclone_project/frontend/src/components/XClone.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n  author: {\r\n    username: string;\r\n  };\r\n}\r\n\r\nconst SNSApp: React.FC = () => {\r\n  // State variables for user registration, login, post creation, and timeline display\r\n  const [username, setUsername] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [title, setTitle] = useState<string>('');\r\n  const [content, setContent] = useState<string>('');\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [error, setError] = useState<string>('');\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isRegistered, setIsRegistered] = useState<boolean>(false); // ユーザー登録済みかどうかの状態\r\n\r\n  // ユーザー登録成功時に呼び出す関数\r\n  const handleRegisterSuccess = () => {\r\n    setIsRegistered(true); // 登録が成功したら、isRegisteredをtrueに設定\r\n  };\r\n\r\n  // Handle user registration\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/register/', {\r\n        username: username, // usernameを明示的に指定\r\n        password: password, // passwordを明示的に指定\r\n      });\r\n      console.log('Registration successful:', response.data);\r\n      setError('');\r\n      handleRegisterSuccess(); // 登録成功時の処理を呼び出す\r\n    } catch (err) {\r\n      console.error('Error during registration:', err);\r\n      setError('Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle user login\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/login', {\r\n        username,\r\n        password,\r\n      });\r\n      const { token } = response.data;\r\n      localStorage.setItem('token', token); // Save token in localStorage\r\n      setToken(token);\r\n      setError('');\r\n      console.log('Login successful:', response.data);\r\n    } catch (err) {\r\n      console.error('Error during login:', err);\r\n      setError('Login failed. Please check your credentials.');\r\n    }\r\n  };\r\n\r\n  // Handle post creation\r\n  const handleCreatePost = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!token) {\r\n      setError('You must be logged in to create a post.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:8000/posts',\r\n        {\r\n          title,\r\n          content,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      console.log('Post created successfully:', response.data);\r\n      setError('');\r\n      fetchPosts(); // Refresh the timeline after creating a post\r\n    } catch (err) {\r\n      console.error('Error creating post:', err);\r\n      setError('Failed to create post. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Fetch posts for the timeline\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/posts');\r\n      setPosts(response.data);\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Error fetching posts:', err);\r\n      setError('Failed to load posts.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts(); // Load posts when the component is mounted\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Social Media App</h1>\r\n\r\n      {/* User Registration */}\r\n      {!token && (\r\n        <div>\r\n          <h2>Sign Up</h2>\r\n          <form onSubmit={handleRegister}>\r\n            <div>\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Sign Up</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* User Login */}\r\n      {!token && isRegistered && ( // ユーザーがログインしておらず、登録済みの場合のみ表示\r\n        <div>\r\n          <h2>Login</h2>\r\n          <form onSubmit={handleLogin}>\r\n            <div>\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Login</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Create Post */}\r\n      {token && isRegistered && (\r\n        <div>\r\n          <h2>Create Post</h2>\r\n          <form onSubmit={handleCreatePost}>\r\n            <div>\r\n              <label>Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Content:</label>\r\n              <textarea\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Create Post</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Timeline */}\r\n      <div>\r\n        <h2>Timeline</h2>\r\n        {error && <p>{error}</p>}\r\n        <ul>\r\n          {posts.map((post) => (\r\n            <li key={post.id}>\r\n              <h3>{post.title}</h3>\r\n              <p>{post.content}</p>\r\n              <p>Posted by: {post.author.username}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SNSApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}